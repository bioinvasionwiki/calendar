name: Calendar auto-update

on:
  push:
    branches: [ main ]
  schedule:
    - cron: "5 2 * * *"   # daily 02:05 UTC
  workflow_dispatch: {}

permissions:
  contents: write

jobs:
  update-ics:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Validate and sanitize ICS_URL
        id: preflight
        env:
          ICS_URL_RAW: ${{ secrets.ICS_URL }}
        run: |
          set -euo pipefail
          if [ -z "${ICS_URL_RAW:-}" ]; then
            echo "ICS_URL secret is EMPTY. Did you add it under Settings â†’ Secrets (not Variables)?"
            exit 1
          fi
          # strip CR/LF and trim spaces
          CLEAN_URL="$(printf %s "$ICS_URL_RAW" | tr -d '\r' | tr -d '\n' | sed 's/^[[:space:]]*//; s/[[:space:]]*$//')"
          if [ -z "$CLEAN_URL" ]; then
            echo "ICS_URL becomes empty after trimming. Re-save the secret without extra spaces/newlines."
            exit 1
          fi
          # Basic sanity check
          case "$CLEAN_URL" in
            http://*|https://*)
              ;;
            *)
              echo "ICS_URL must start with http(s)://"
              exit 1
              ;;
          esac
          case "$CLEAN_URL" in
            *.ics|*.ics\?* )
              ;;
            *)
              echo "ICS_URL should end with .ics (Google Calendar iCal feed)."
              # Not fatal, but warn
              ;;
          esac
          # Pass sanitized value to later steps as output (masked)
          echo "clean_url::$CLEAN_URL" >> $GITHUB_OUTPUT

      - name: Download ICS to temp
        env:
          CLEAN_URL: ${{ steps.preflight.outputs.clean_url }}
        run: |
          set -euo pipefail
          # -L follow redirects, --fail-with-body for better HTTP errors
          curl --silent --show-error --location --fail-with-body "$CLEAN_URL" -o new.ics
          # Quick validate it's non-empty and looks like ICS
          if [ ! -s new.ics ]; then
            echo "Downloaded file is empty."
            exit 1
          fi
          head -n 1 new.ics | grep -qi '^BEGIN:VCALENDAR' || {
            echo "File does not look like an .ics (no BEGIN:VCALENDAR header)."
            exit 1
          }

      - name: Replace if changed (and archive)
        run: |
          set -euo pipefail
          mkdir -p archive
          if [ ! -f ias_calendar.ics ] || ! cmp -s new.ics ias_calendar.ics; then
            mv new.ics ias_calendar.ics
            DATE=$(date -u +%F)
            cp ias_calendar.ics "archive/ias_calendar_${DATE}.ics"
          else
            echo "No changes"; rm -f new.ics
          fi

      - name: Commit if changed
        run: |
          set -e
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          if [ -n "$(git status --porcelain)" ]; then
            git add ias_calendar.ics archive/ || true
            git commit -m "Auto-update ias_calendar.ics ($(date -u +'%F %T'))"
            git push
          else
            echo "Nothing to commit."
          fi
